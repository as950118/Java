/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2018-03-15 17:43:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;

public final class about_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\" initial-scale=\"1\">\r\n");
      out.write("<link rel=\"stylesheet\" href =\"css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href =\"css/custom.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href =\"css/default.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href =\"css/tables.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href =\"css/layout.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href =\"css/featured_slide.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href =\"css/form.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href =\"css/navi.css\">\r\n");
      out.write("<title>SCREEN DOOR</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script>\r\n");
      out.write("$('#myCarousel').carousel();\r\n");
      out.write("var winWidth = $(window).innerWidth();\r\n");
      out.write("$(window).resize(function () {\r\n");
      out.write("\r\n");
      out.write("    if ($(window).innerWidth() < winWidth) {\r\n");
      out.write("        $('.carousel-inner>.item>img').css({\r\n");
      out.write("            'min-width': winWidth, 'width': winWidth\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("    else {\r\n");
      out.write("        winWidth = $(window).innerWidth();\r\n");
      out.write("        $('.carousel-inner>.item>img').css({\r\n");
      out.write("            'min-width': '', 'width': ''\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String userID = null;
		if(session.getAttribute("userID")!=null){
			userID = (String)session.getAttribute("userID");
		}
	
      out.write("\r\n");
      out.write("\t<nav class=\"navbar\" style=\"background:black;overflow:visible;\">\r\n");
      out.write("\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t<div class=\"navbar-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\"\r\n");
      out.write("\t\t\t\t\tdata-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\r\n");
      out.write("\t\t\t\t\taria-expanded=\"false\">\r\n");
      out.write("\t\t\t\t\t<span class =\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t\t<span class =\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t\t<span class =\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<a class=\"navbar-brand\" style=\"font-family:TESLA;color:#F8F8FF;\" href=\"main.jsp\">SCREENDOOR</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"main.jsp\" accesskey=\"1\" style=\"font-family:Gotham Light;font-size:12px;color:#F8F8FF;\">MAIN</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"bbs.jsp\" style=\"font-family:Gotham Light;font-size:12px;color:#F8F8FF;\">ABOUT</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"bbs.jsp\" style=\"font-family:Gotham Light;font-size:12px;color:#F8F8FF;\">NOTIFY</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t");

				if(userID ==null){
				
			
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<ul class = \"nav navbar-nav navbar-right\">\r\n");
      out.write("\t\t\t\t<li class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"dropdown-toggle\"\r\n");
      out.write("\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\r\n");
      out.write("\t\t\t\t\t\taria-expanded=\"false\" style=\"font-family:Gotham Light;color:#F8F8FF;\">SIGN IN<span class=\"caret\"></span></a>\r\n");
      out.write("\t\t\t\t\t<ul class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t\t\t\t<li ><a href=\"login.jsp\" style=\"font-family:Gotham Light\">LOGIN</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li ><a href=\"join.jsp\" style=\"font-family:Gotham Light\">JOIN</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t");

				}else{
			
      out.write("\r\n");
      out.write("\t\t\t<ul class = \"nav navbar-nav navbar-right\">\r\n");
      out.write("\t\t\t\t<li class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"dropdown-toggle\"\r\n");
      out.write("\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\r\n");
      out.write("\t\t\t\t\t\taria-expanded=\"false\" style=\"font-family:Gotham Light;color:#F8F8FF;\">MANAGE<span class=\"caret\"></span></a>\r\n");
      out.write("\t\t\t\t\t<ul class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t\t\t\t<li ><a href=\"logoutAction.jsp\" style=\"font-family:Gotham Light\">LOGOUT</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t<!-- container  -->\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("    \t<div id=\"content\">\r\n");
      out.write("      \t\t<h1 style=\"color:#000000;\">About SCREENDOOR</h1>\r\n");
      out.write("      \t\t<br>\r\n");
      out.write("      \t\t<img class=\"imgr\" src=\"image/slab_CEO.jpg\" width=\"150\" height=\"150\"/>\r\n");
      out.write("      \t\t<br>\r\n");
      out.write("      \t\t<p style=\"font-family:Nanum Gothic;color:#000000;font-size:10pt;\"><b>&nbsp;&nbsp;S-LAB</b>은 전기차를 타기 위해서 타협할 필요가 없다는 것을 보여주고, \r\n");
      out.write("      \t\t동아리 소개 문구 및 사진은 동아리 로고, 동아리 로고 다운로드 링크 걸기\r\n");
      out.write("      \t\t  </p>\r\n");
      out.write("      \t\t  <br>\r\n");
      out.write("      \t\t  <b style=\"font-size:13pt;font-family:Gotham Light;color:#000000;float:right;\">SCREENDOR  회장</b>\r\n");
      out.write("      \t\t  <br>\r\n");
      out.write("      \t\t  <br>\r\n");
      out.write("      \t\t  <b style=\"font-size:13pt;font-family:Nanum Gothic;color:#000000;float:right;\">정 헌 진</b>\r\n");
      out.write("      \t\t  <span class =\"icon-bar\"></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t    <div class=\"clear\"></div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\r\n");
      out.write("\t<nav class=\"navbar\" style=\"background:#F8F8FF;overflow:visible;\">\r\n");
      out.write("    \t\t<p class=\"jumbo\" style=\"color:black;\">© 2017 SCREENDOOR. All Rights Reserved</p>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
